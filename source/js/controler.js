'use strict';

//todo –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º core-js –∏ regenerator
import 'core-js/stable';
import 'regenerator-runtime/runtime.js';

//* –º–æ–∏ –∏–º–ø–æ—Ä—Ç—ã
import * as model from './model.js';
import CardsView from './Views/CardsView.js';
// console.log('CardsView: ', CardsView);
import CountryView from './Views/CountryView.js';
import SearchView from './Views/SearchView.js';
import FilterView from './Views/FilterView.js';

/* console.log('CardsView: ', CardsView);
console.log('CountryView: ', CountryView); */

import filterToggle from './filter.js';
import switchModeSimple from './switchModeSimple.js';

//=====================================================
// –±–ª–æ–∫ –Ω–∞ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è?

//* –ø—Ä–æ–≤–µ—Ä—è–µ–º , –Ω–∞ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è
const bodyId = document.querySelector('body').id;
// console.log('bodyId: ', bodyId);

switch (bodyId) {
	case 'index':
		initIndexHTML();
		break;
	case 'country':
		initCountryHTML();
		break;

	default:
		break;
}

//=====================================================
// –±–ª–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π

//todo —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω
async function renderAllCountriesCards() {
	const allCountries = await model.getData();
	model.state.allCountries = allCountries;
	console.log('model.state: ', model.state);

	history.pushState(null, null, '/');

	CardsView.render(model.state.allCountries);
}
//todo 2 –≤–∞—Ä - —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω
/* async function renderCountriesCards(all = true) {
	if (all) {
		const allCountries = await model.getData();
		model.state.allCountries = allCountries;
		console.log('model.state: ', model.state);

		CardsView.render(model.state.allCountries);
	} else {
		CardsView.render(model.state.search.results);
	}
} */

//todo —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç—Ä–∞–Ω –ø–æ –ø–æ–∏—Å–∫—É
/* async function renderCountriesCards() {
	// CardsView.renderSpinner();
	SearchView.addHandlerSearch(model.searchCountriesOnQuery);
	CardsView.render(model.state.search.results);
} */

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–æ–∏—Å–∫ —Å—Ç—Ä–∞–Ω
async function controlSearchCountries() {
	try {
		//* 0 - —Ä–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏–Ω–Ω–µ—Ä
		CardsView.renderSpinner();

		//* 1 - –ø–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å
		const query = SearchView.getQuery();

		//* 2 - –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ state
		model.state.search.query = query;

		//* 2a - –µ—Å–ª–∏ –Ω–µ—Ç query (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞) - —á–∏—Å—Ç–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
		!query && CardsView.clearCardsHeader();

		//* 2–± - –º–µ–Ω—è–µ–º url
		history.pushState(null, null, `/?search=${query}`);

		//* 3 —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
		const data = await model.getData(query);
		console.log('data: ', data);

		//* 3a - –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç - –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
		if (data.length === 0)
			CardsView.renderError(
				`Sorry, no country was found on your query <span>${query}</span>üòû Try search for something else!`
			);

		//* 4 - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–º–µ—â–∞–µ–º –≤ state
		model.state.search.results = data;

		//* 5 - —Ä–µ–Ω–¥–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
		CardsView.render(model.state.search.results);

		//* 6 - —Ä–µ–Ω–¥–µ—Ä–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
		CardsView.renderMessage(model.state.search.query);
	} catch (err) {
		console.warn(`üí£üí£üí£ ${err.message} ${err.status}`);

		if (err.message.includes('404')) {
			CardsView.renderError(
				`Sorry, no country was found on your query <span>${model.state.search.query}</span>üòû Try search for something else!`
			);

			CardsView.clear();
		}
	}
}

//todo —Ñ–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
async function controlFilterRegion(region) {
	console.log('controlFilterCountries: ');
}

//=====================================================
// –±–ª–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

//* –Ω–∞—á–∞–ª–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ index
async function initIndexHTML() {
	console.log('init index.html');
	filterToggle();
	switchModeSimple();

	//* 0 - –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
	CardsView.renderSpinner();

	//* 1 - –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã
	await renderAllCountriesCards();
	// await renderCountriesCards();

	//todo –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω—ã –ø–æ –ø–æ–∏—Å–∫—É
	// renderCountriesCards();
	SearchView.addHandlerSearch(controlSearchCountries);

	//todo –æ—Ç–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω—ã –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º
	// FilterView.addHandlerFilterRegion(controlFilterRegion);
}

//* –Ω–∞—á–∞–ª–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ country
function initCountryHTML() {
	console.log('init country.html');
	switchModeSimple();
}

/* const getData = async (url) => {
	const response = await fetch(url);
	console.log('response: ', response);

	const data = await response.json();
	console.log('data: ', data);

	return data;
};

getData('https://restcountries.eu/rest/v2/all'); */
